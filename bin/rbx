#!/bin/bash

RBX_USAGE="Access frequently used Roblox dev programs & commands

USAGE:
    rbx [subcommand]

COMMANDS:
	build              Build the rojo project 
	run                Builds the project and opens the file in Roblox Studio
	studio             Opens a file in Roblox Studio
	import             Runs the script located at remodel/import.sh (TEMPORARY)
	refresh            Runs the script located at remodel/refresh.sh (TEMPORARY)
	test               Executes the build command and then runs 'run-tests.lua' in Roblox Studio
	img-sync           Syncs images to Roblox via Tarmac"

BUILD_USAGE="Build the Rojo project

USAGE:
	rbx build [project_name] [file_name]

ARGS:
	[project_name]
		Name of the project to build. Defaults to 'default'
	[file_name]
		Name of the file to be written to. Defaults to the value of project_name"

RUN_USAGE="Builds the project and opens the file in Roblox Studio.

USAGE:
	rbx run [project_name]

ARGS:
	[project_name]
		Name of the project to run. Defaults to 'default'
	[file_name]
		Name of the file to be written to. Defaults to the value of project_name"

platform=''

sys="$(uname -sr)"
case "${sys}" in
	Linux*microsoft*)
		platform="wsl"
		;;
	Linux*)
		platform="linux"
		;;
	CYGWIN*|MINGW*|MSYS*)
		platform="windows"
		;;
	Darwin*)
		platform="mac"
		;;
	*)
		platform="unknown"
		;;
esac

roblosecurity() {
	token=''

	if [[ -f ".env" ]]; then
		token="$(awk -F: '/^ROBLOSECURITY=/{print}' '.env')"
		token="${token#*ROBLOSECURITY=\"}"
		token="${token%\"}"
	fi

	if [[ ! "${token}" ]]; then
		case "${platform}" in
			windows|wsl)
				reg_cmd='reg'
				if [[ -x "$(command -v reg.exe)" ]]; then
					reg_cmd='reg.exe'
				fi
				token="$(${reg_cmd} query 'HKCU\SOFTWARE\Roblox\RobloxStudioBrowser\roblox.com' -v .ROBLOSECURITY)"
				;;
			linux)
				reg_path="${HOME}/.local/share/grapejuice/prefixes/studio/user.reg"
				if [[ -f "${reg_path}" ]]; then
					token="$(awk -F: '/^".ROBLOSECURITY"=/{print}' "${reg_path}")"
				fi
				;;
		esac

		token="${token#*COOK::<}"
		token="${token%>*}"
	fi

	echo "${token}"
}

open_place() {
	case "${platform}" in
		wsl)
			powershell.exe -c start "${1}"
			;;
		windows)
			start "${1}"
			;;
		linux)
			env LOG_LEVEL="WARNING" grapejuice studio "${PWD}/${1}"
			;;
		mac)
			open "${1}"
			;;
	esac
}

build() {
	mkdir -p build
	rojo --version
	rojo build "${1:-default}.project.json" -o "build/${2:-${1:-default}}.rbxl"
}

run() {
	build "${@}"
	open_place "build/${2:-${1:-default}}.rbxl"
}

run_in_roblox() {
	success=''
	rir='run-in-roblox.exe'

	case "${platform}" in
		windows|wsl)
			if [[ -x "$(command -v run-in-roblox)" ]]; then
				rir='run-in-roblox'
			fi

			"${rir}" --place "${1}" --script "${2}" && success='true'
			;;
		linux)
			if [[ -x "$(command -v wine)" ]]; then
				WINEPREFIX="${HOME}/.local/share/grapejuice/prefixes/studio" \
					wine "${HOME}/tools/run-in-roblox.exe" --place "${1}" --script "${2}" \
					&& success='true'
			fi
			;;
	esac

	if [[ ! "${success}" ]]; then
		echo "A run-in-roblox installation was not found on this system"
	fi
}

run_tests() {
	build "${1}" "${1:-default}-test"
	run_in_roblox "build/${1:-default}-test.rbxl" "run-tests.lua"
}

tarmac_sync() {
	tarmac sync --target roblox --auth "$(roblosecurity)" --retry 3 --retry-delay 5
}

case "${1}" in
	init)
		rojo init
		wally init
		aftman init
		;;
	build)
		case "${2}" in
			--help)
				echo "${BUILD_USAGE}"
				;;
			*)
				build "${@:2}"
				;;
		esac
		;;
	run)
		case "${2}" in
			--help)
				echo "${RUN_USAGE}"
				;;
			*)
				run "${@:2}"
				;;
		esac
		;;
	test)
		run_tests "${2}"
		;;
	studio)
		open_place "${@:2}"
		;;
	tarmac)
		case "${2}" in
			sync)
				tarmac_sync
				;;
			*)
				tarmac "${@:2}"
				;;
		esac
		;;
	import)
		env REMODEL_AUTH="$(roblosecurity)" remodel/import.sh "${@:2}"
		;;
	refresh)
		env REMODEL_AUTH="$(roblosecurity)" remodel/refresh.sh "${@:2}"
		;;
	img-sync)
		tarmac_sync
		;;
	auth)
		roblosecurity
		;;
	*)
		echo "${RBX_USAGE}"
		;;
esac

